@model Product

@{
    ViewData["Title"] = $"{Model.Name} - Product Details";
}


<div class="container mt-5">
    <div class="row">
        <!-- Product Image Column -->
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm">
                @if (string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="/images/product.jpg" class="card-img-top img-fluid" alt="@Model.Name">
                }
                else
                {
                    <img src="@Model.ImageUrl" class="card-img-top img-fluid" alt="@Model.Name">
                }
                @if (Model.IsProductOfTheWeek)
                {
                    <div class="position-absolute top-0 end-0 p-2">
                        <span class="badge bg-warning">Product of the Week</span>
                    </div>
                }
            </div>
        </div>

        <!-- Product Details Column -->
        <div class="col-md-6">
            <h2 class="mb-3">@Model.Name</h2>

            @if (!string.IsNullOrEmpty(Model.ShortDescription))
            {
                <p class="lead mb-3">@Model.ShortDescription</p>
            }

            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4 class="text-primary">@Model.Price.ToString("C")</h4>
                <div>
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= Math.Floor(Model.Rating))
                        {
                            <i class="bi bi-star-fill text-warning"></i>
                        }
                        else if (i - Model.Rating > 0 && i - Model.Rating < 1)
                        {
                            <i class="bi bi-star-half text-warning"></i>
                        }
                        else
                        {
                            <i class="bi bi-star text-warning"></i>
                        }
                    }
                    <span class="ms-1">(@Model.Rating)</span>
                </div>
            </div>

            <div class="mb-3">
                <span class="badge @(Model.InStock ? "bg-success" : "bg-danger")">
                    @(Model.InStock ? "In Stock" : "Out of Stock")
                </span>

                @if (!string.IsNullOrEmpty(Model.Color))
                {
                    <span class="badge bg-secondary ms-2">Color: @Model.Color.ToString()</span>
                }

            </div>

            @if (!string.IsNullOrEmpty(Model.LongDescription))
            {
                <div class="mb-4">
                    <h5>Description</h5>
                    <p>@Html.Raw(Model.LongDescription)</p>
                </div>
            }

            <div class="d-grid gap-2">
                @if (Model.InStock)
                {
                    <button id="addToCartButton" data-product-id="@Model.ProductId" class="btn btn-primary">
                        <i class="bi bi-cart-plus"></i> Add to Cart
                    </button>
                }
                else
                {
                    <button class="btn btn-secondary" disabled>
                        <i class="bi bi-cart-x"></i> Currently Unavailable
                    </button>
                }
                <a class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Back to Products
                </a>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
         $("#addToCartButton").click(function() {

            // Animation effect when adding to cart
            $(this).html('<i class="bi bi-check-circle"></i> Added to Cart');
            $(this).removeClass('btn-primary').addClass('btn-success');

            alert('Produkt został dodany do koszyka!');
         });
     });
</script>
